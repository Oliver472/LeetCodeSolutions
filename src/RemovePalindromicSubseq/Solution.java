package RemovePalindromicSubseq;

public class Solution {

    /*
    * You are given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.

Return the minimum number of steps to make the given string empty.

A string is a subsequence of a given string if it is generated by deleting some characters of a given string without changing its order. Note that a subsequence does not necessarily need to be contiguous.

A string is called palindrome if is one that reads the same backward as well as forward.
    * */

    public int removePalindromeSub(String s) {
        if (s.isEmpty()) return 0;
        int left = 0;
        int right = s.length() - 1;
        char[] str = s.toCharArray();

        while (left < right) {
            if (str[left] != str[right]) {
                return 2;
            }
            left += 1;
            right -= 1;
        }

        return 1;
    }

    public static void main(String[] args) {
        Solution sol = new Solution();
        String s = "baabb";
        System.out.println(sol.removePalindromeSub(s));
    }
}
